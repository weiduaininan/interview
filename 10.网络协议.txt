HTTP状态码

1XX  信息类状态码   接受请求正在处理
2XX  成功状态码
3XX  重定向状态码
4XX  客户端错误状态码
5XX  服务器错误状态码


200 成功
204 请求成功 但无返回主体信息

301 永久重定向
302 临时重定向

403 没有权限禁止访问
404 文件未找到

500 服务器内部发生错误
502 无效网关
503 超负载\维护中


OSI七层模型

物理层        建立、维护、断开物理连接
数据链路层     建立逻辑连接、进行硬件地址寻址、差错校验
网络层        进行逻辑地址寻址，实现不同网络之间的路径选择
传输层        定义传输数据的协议端口号，以及流控和差错校验      TCP\UDP  数据包一旦离开网卡即进入网络传输层
会话层        建立、管理、终止会话
表示层        数据的表示、安全、压缩
应用层        网络服务与最终用户的一个接口     HTTP HTTPS  FTP  SMTP  DNS  POP3 TELNET

FTP     文件传输协议      默认端口 21
TELNET  远程连接计算机    默认端口 23
SMTP    简单邮件传输协议  默认端口 25
POP3    接收邮件         默认端口 110
HTTP    超文本传输协议    默认端口 80
DNS     域名解析服务     默认端口  53



HTTP协议
基于B/S模式  浏览器brower  服务器server
通信开销小、简单快速、传输成本低
使用灵活、可使用超文本传输协议
可节省传输时间
无状态

工作原理
客户端发送请求服务端，创建TCP连接，制定端口号 默认 80 
连接到服务器，服务器监听浏览器请求，一旦监听到客户端的请求，分析请求类型后
服务器会向客户端返回状态信息和数据内容

响应头
Content-type  Accept  Origin  Cookie  User-Agent  Referer

请求方法
GET POST HEAD OPTIONS PUT DELETE TRACE

GET和POST 请求方法的区别
GET 后退操作是无害的  可以收藏书签  可以被浏览器缓存   GET会保存在历史浏览中  长度限制  相对于POST更不安全

HTTPS 比 HTTP 协议 安全的多 在HTTP基础上 进行SSL/TLS握手 以及数据加密



