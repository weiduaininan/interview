程序功能设计

真题: 编写一个在线留言本, 实现用户在线留言功能, 留言信息存储到数据库, 要求设计数据表内容以及使用php编码完成

首先考虑表字段然后创建数据表

需要字段: id, 留言标题, 留言内容, 留言时间, 留言者

Create messages(
 
Id int unsigned not null auto_increment primary key,
 
Title varlue(128) not null default ‘’,
 
Content text not null default ‘’,
 
Created_at int(0) not null default(0),
 
User_name varchar(64)
 
)engine=innodb default charset=utf8;
 

程序:

<?php
 
$user_name = $_POST['user_name'];
 
$content = $_POST['content'];
 
$title = $_POST['title'];
 
if (empty($user_name) || empty($content) || empty($title))
 
{
 
        exit('请填写完整');
 
}
 
 
 
$dsn = "mysql:hsot=localhost; dbname=test";
 
try{
 
        $pdo = new PDO($dsn, 'root', 'root');
 
        $sql = 'insert into messages (title, content, created_at, user_name) values(:title, :content, :created_at, :user_name)';
 
        $sth = $pdo->prepare($sql);
 
        $data = [
 
                ':title'        =>      $title,
 
                ':content'      =>      $content,
 
                ':created_at'   =>      time(),
 
                ':user_name'    =>      $user_name
 
        ];
 
        $rows = $sth->execute($data);
 
        if ($rows)
 
        {
 
                exit('操作成功');
 
        } else {
 
                exit('操作失败');
 
        }
 
} catch (PDOException $e) {
 
        exit ('Error:'.$e->getMessage());
 
}


$dbms='mysql';     //数据库类型
$host='localhost'; //数据库主机名
$dbName='test';    //使用的数据库
$user='root';      //数据库连接用户名
$pass='';          //对应的密码
$dsn="$dbms:host=$host;dbname=$dbName";


try {
    $dbh = new PDO($dsn, $user, $pass); //初始化一个PDO对象
    echo "连接成功<br/>";
   
    $sql = 'insert into messages (title, content, created_at, user_name) values(:title, :content, :created_at, :user_name)';

    $rows = $dbh->query($sql);
    if ($rows){
       exit('操作成功');
    } else {
       exit('操作失败');
    }
} catch (PDOException $e) {
    die ("Error!: " . $e->getMessage() . "<br/>");
}
 

真题: 设计一个无线分类表

id title pid    path
1  服装   0      0-1
2  上衣   1      0-1-2
3  长袖   2      0-1-2-3

ath路径里面存父亲id到自己id的整个路径

排序的话可以直接根据path来order by
 

一般直接使用递归的方式, path只是辅助显示