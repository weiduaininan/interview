变量的作用域和静态变量

使用function外的全局变量用 global  $GLOBALS['str'] 其他超全局数组

静态变量
static关键字
1、仅初始化一次
2、初始化时需要赋值
3、每次执行函数该值会保留
4、static修饰的变量是局部的，仅在函数内部有效
5、可以记录函数的调用次数，从而可以在某些条件下终止递归

引用传递
默认情况下，函数参数通过值传递
如果希望允许函数修改它的值，必须通过引用传递参数   function  (  &$str  )

********************************************************************************

函数返回值

********************************************************************************

值通过使用可选的返回语句 return 返回
可以返回包括数组和对象的任意类型
返回语句会终止函数执行，将控制权交回函数调用处
如省略return 返回值为null 不可用多个返回值

应用方法 同样使用 &

********************************************************************************

外部引用文件

********************************************************************************

include
require

加载过程中未找到文件
include结构会发出一条警告
require会发处一个致命错误

include_once / require_once 会检查是否已经被包含过了，如果没有则引入文件。
********************************************************************************

系统内置函数

********************************************************************************

时间日期函数

date();
strtotime();
mktime();
time();
microtime(); 
date_default_timezone_set(); 设置时区函数

IP处理函数
ip2long();
long2ip();

打印函数
var_dump();
printf();
print_r();
print();
echo ;

序列化、反序列化函数
serialize();   序列化就是把本来不能直接存储的数据转换成可存储的数据，并且不会丢掉数据格式
unserialize(); 其实就是字面的意思，把序列化的数据，转换成我们需要的格式

字符串处理函数
implode(); 数组转字符串
join(); 数组转字符串
explode(); 字符串转数组
strrev();字符串翻转
trim();去掉字符串两边的某值
ltrim();去掉左边
rtrim();去掉右边
stristr() - strstr 函数的忽略大小写版本
strpos() - 查找字符串首次出现的位置
strrpos() - 查找字符串最后一次出现的位置
strrchr() - 查找指定字符在字符串中的最后一次出现
substr() - 返回字符串的子串

array_keys() 数组的key组成新的array
array_values() 数组的value组成新的数组
array_diff() 比较 参数2 比 参数1 数组多了哪些值
array_intersect() 两个数组的交集
array_merge() 合并数组
array_shift() 删除数组的第一个元素
array_unshift() 在数组的最前面添加一个或多个数据
array_pop() 删除数组的最后一个元素
array_push() 在数组的末尾添加一个或多个数据
sort() 数组、字母排序

